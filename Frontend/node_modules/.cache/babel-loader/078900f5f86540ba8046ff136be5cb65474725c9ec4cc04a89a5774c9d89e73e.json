{"ast":null,"code":"var _jsxFileName = \"/home/renan/testes/teste-tecnico-accenture/teste-tecnico-front/src/components/Filter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport apiService from \"../service/api\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Filter = () => {\n  _s();\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [keyword, setKeyword] = useState('');\n  const [filteredLogs, setFilteredLogs] = useState([]);\n  const applyFilter = () => {\n    handleFilter(startDate, endDate, keyword);\n  };\n  const handleFilter = async () => {\n    console.log('start_date:', startDate, ', end_date:', endDate, ', keyword:', keyword);\n    try {\n      // Verificar se startDate e endDate estão preenchidas\n      if (!startDate || !endDate) {\n        console.error('Por favor, preencha ambas as datas para filtrar.');\n        return;\n      }\n\n      // Verificar se as datas estão no formato YYYY-MM-DD\n      const dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/;\n      if (!startDate.match(dateRegex) || !endDate.match(dateRegex)) {\n        console.error('Datas inválidas - devem estar no formato YYYY-MM-DD');\n        return;\n      }\n      const formattedStartDate = startDate !== '' ? new Date(startDate).toISOString().split('T')[0] : '';\n      const formattedEndDate = endDate !== '' ? new Date(endDate).toISOString().split('T')[0] : '';\n      const logsData = await apiService.filterLogs(formattedStartDate, formattedEndDate, keyword);\n      console.log('logsData:', logsData);\n      setFilteredLogs(logsData);\n      console.log('filteredLogs:', filteredLogs);\n    } catch (error) {\n      console.error(\"Error filtering logs\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"filter-input\",\n      type: \"text\",\n      placeholder: \"Start Date\",\n      value: startDate,\n      onChange: e => setStartDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"filter-input\",\n      type: \"text\",\n      placeholder: \"End Date\",\n      value: endDate,\n      onChange: e => setEndDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"filter-input\",\n      type: \"text\",\n      placeholder: \"Search keyword...\",\n      value: keyword,\n      onChange: e => setKeyword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"apply-button\",\n      onClick: applyFilter,\n      children: \"Apply\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_s(Filter, \"3DecGAhPQAfrYN1Ohrbc1RUbAs8=\");\n_c = Filter;\nexport default Filter;\nvar _c;\n$RefreshReg$(_c, \"Filter\");","map":{"version":3,"names":["React","useState","apiService","jsxDEV","_jsxDEV","Filter","_s","startDate","setStartDate","endDate","setEndDate","keyword","setKeyword","filteredLogs","setFilteredLogs","applyFilter","handleFilter","console","log","error","dateRegex","match","formattedStartDate","Date","toISOString","split","formattedEndDate","logsData","filterLogs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/renan/testes/teste-tecnico-accenture/teste-tecnico-front/src/components/Filter.js"],"sourcesContent":["import React, { useState } from \"react\"\nimport apiService from \"../service/api\"\nimport './styles.css'\n\nconst Filter = () => {\n   const [startDate, setStartDate] = useState('')\n   const [endDate, setEndDate] = useState('')\n   const [keyword, setKeyword] = useState('')\n   const [filteredLogs, setFilteredLogs] = useState([])\n\n   const applyFilter = () => {\n      handleFilter(startDate, endDate, keyword)\n   }\n\n   const handleFilter = async () => {\n      console.log('start_date:', startDate, ', end_date:', endDate, ', keyword:', keyword)\n\n      try {\n         // Verificar se startDate e endDate estão preenchidas\n         if (!startDate || !endDate) {\n            console.error('Por favor, preencha ambas as datas para filtrar.')\n            return\n         }\n\n         // Verificar se as datas estão no formato YYYY-MM-DD\n         const dateRegex = /^\\d{4}-\\d{2}-\\d{2}$/\n         if (!startDate.match(dateRegex) || !endDate.match(dateRegex)) {\n            console.error('Datas inválidas - devem estar no formato YYYY-MM-DD')\n            return\n         }\n\n         const formattedStartDate = startDate !== '' ? new Date(startDate).toISOString().split('T')[0] : ''\n         const formattedEndDate = endDate !== '' ? new Date(endDate).toISOString().split('T')[0] : ''\n\n         const logsData = await apiService.filterLogs(formattedStartDate, formattedEndDate, keyword)\n         console.log('logsData:', logsData)\n         setFilteredLogs(logsData)\n         console.log('filteredLogs:', filteredLogs)\n      } catch (error) {\n         console.error(\"Error filtering logs\", error)\n      }\n   }\n\n   return (\n      <div className=\"filters\">\n         <h2>Filters</h2>\n         <input\n            className=\"filter-input\"\n            type=\"text\"\n            placeholder=\"Start Date\"\n            value={startDate}\n            onChange={(e) => setStartDate(e.target.value)}\n         />\n         <input\n            className=\"filter-input\"\n            type=\"text\"\n            placeholder=\"End Date\"\n            value={endDate}\n            onChange={(e) => setEndDate(e.target.value)}\n         />\n         <input\n            className=\"filter-input\"\n            type=\"text\"\n            placeholder=\"Search keyword...\"\n            value={keyword}\n            onChange={(e) => setKeyword(e.target.value)}\n         />\n         <button className='apply-button'onClick={applyFilter}>Apply</button>\n      </div>\n   )\n}\n\nexport default Filter"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}