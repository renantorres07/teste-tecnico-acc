{"ast":null,"code":"var _jsxFileName = \"/home/renan/testes/teste-tecnico-accenture/teste-tecnico-front/src/components/LogList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport apiService from \"../services/api\";\nimport LogFilter from \"./LogFilter\";\nimport './loglist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogList = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  const [filteredLogs, setFilteredLogs] = useState([]);\n  useEffect(() => {\n    fetchLogs();\n  }, []);\n  const fetchLogs = async () => {\n    try {\n      const logsData = await apiService.getLogs();\n      setLogs(logsData);\n    } catch (error) {\n      console.error('Error fetching logs:', error);\n    }\n  };\n  const handleFilter = async (startDate, endDate, keyword) => {\n    try {\n      const logsData = await apiService.filterLogs(startDate, endDate, keyword);\n      setLogs(logsData);\n    } catch (error) {\n      console.error(\"Error filtering logs\", error);\n    }\n  };\n  const formatTime = time => {\n    const formattedTime = time.split('.')[0];\n    const formattedDate = `1970-01-01${formatTime}Z`;\n    const dateObj = new Date(formattedDate);\n    if (!isNaN(dateObj.getTime())) {\n      return dateObj.toLocaleTimeString('pt-BR');\n    } else {\n      return 'Invalid Date';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(LogFilter, {\n      handleFilter: handleFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"log-cards\",\n      children: (filteredLogs.length > 0 ? filteredLogs : logs).map(log => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"log-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"ID:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }, this), \" \", log._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"IP:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this), \" \", log.ip_address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this), \" \", new Date(log.date).toLocaleDateString('pt-BR')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this), \" \", isValidTime(log.time) ? formatTime(log.time) : 'Invalid Time']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this), \" \", log.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Version:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 19\n          }, this), \" \", log.version]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Document:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this), \" \", log.document]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }, this), \" \", log.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this)]\n      }, log._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n_s(LogList, \"inB7t5Cdvr4uuqjVY5IR8fPhjyI=\");\n_c = LogList;\nexport default LogList;\nvar _c;\n$RefreshReg$(_c, \"LogList\");","map":{"version":3,"names":["React","useState","useEffect","apiService","LogFilter","jsxDEV","_jsxDEV","LogList","_s","logs","setLogs","filteredLogs","setFilteredLogs","fetchLogs","logsData","getLogs","error","console","handleFilter","startDate","endDate","keyword","filterLogs","formatTime","time","formattedTime","split","formattedDate","dateObj","Date","isNaN","getTime","toLocaleTimeString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","log","_id","ip_address","date","toLocaleDateString","isValidTime","username","version","document","description","_c","$RefreshReg$"],"sources":["/home/renan/testes/teste-tecnico-accenture/teste-tecnico-front/src/components/LogList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport apiService from \"../services/api\"\nimport LogFilter from \"./LogFilter\"\nimport './loglist.css'\n\nconst LogList = () => {\n   const [logs, setLogs] = useState([])\n   const [filteredLogs, setFilteredLogs] = useState([])\n\n   useEffect(() => {\n      fetchLogs()\n   }, [])\n\n   const fetchLogs = async () => {\n      try{\n         const logsData = await apiService.getLogs()\n         setLogs(logsData)\n      } catch (error) {\n         console.error('Error fetching logs:', error)\n      }\n   }\n\n   const handleFilter = async (startDate, endDate, keyword) => {\n      try {\n         const logsData = await apiService.filterLogs(startDate, endDate, keyword)\n         setLogs(logsData)\n      } catch (error) {\n         console.error(\"Error filtering logs\", error)\n      }\n   }\n   \n   const formatTime = (time) => {\n      const formattedTime = time.split('.')[0]\n      const formattedDate = `1970-01-01${formatTime}Z`\n\n      const dateObj = new Date (formattedDate)\n      if (!isNaN(dateObj.getTime())){\n         return dateObj.toLocaleTimeString('pt-BR')\n      } else {\n         return 'Invalid Date'\n      }\n   }\n\n   return (\n      <div className=\"log-list\">\n         <h1>Log List</h1>\n         <LogFilter handleFilter={handleFilter} />\n         <div className=\"log-cards\">\n            {(filteredLogs.length > 0 ? filteredLogs : logs).map((log) => (\n               <div key={log._id} className=\"log-card\">\n               <p><b>ID:</b> {log._id}</p>\n               <p><b>IP:</b> {log.ip_address}</p>\n               <p><b>Date:</b> {new Date(log.date).toLocaleDateString('pt-BR')}</p>\n               <p><b>Time:</b> {isValidTime(log.time) ? formatTime(log.time) : 'Invalid Time'}</p>\n               <p><b>Username:</b> {log.username}</p>\n               <p><b>Version:</b> {log.version}</p>\n               <p><b>Document:</b> {log.document}</p>\n               <p><b>Description:</b> {log.description}</p>\n               </div>\n            ))}\n         </div>\n      </div>\n   )\n}\n\nexport default LogList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}