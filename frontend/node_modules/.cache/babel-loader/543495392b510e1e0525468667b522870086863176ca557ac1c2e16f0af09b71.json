{"ast":null,"code":"var _jsxFileName = \"/home/renan/testes/teste-tecnico-accenture/teste-tecnico-front/src/components/LogList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport apiService from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LogList = () => {\n  _s();\n  const [logs, setLogs] = useState([]);\n  useEffect(() => {\n    fetchLogs();\n  }, []);\n  const fetchLogs = async () => {\n    try {\n      const logsData = await apiService.getLogs();\n      setLogs(logsData);\n    } catch (error) {\n      console.error('Error fetching logs:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"log-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Log List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: logs.map(log => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: log._id\n        }, log._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: log.ip_address\n        }, log.ip_address, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: log.date\n        }, log.date, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: log.time\n        }, log.time, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: log.username\n        }, log.username, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: log.version\n        }, log.version, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: log.document\n        }, log.document, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: log.description\n        }, log.description, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_s(LogList, \"6h9FKNtuyCQaVwwdLqmS9omOzEQ=\");\n_c = LogList;\nexport default LogList;\nvar _c;\n$RefreshReg$(_c, \"LogList\");","map":{"version":3,"names":["React","useState","useEffect","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","LogList","_s","logs","setLogs","fetchLogs","logsData","getLogs","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","log","_id","ip_address","date","time","username","version","document","description","_c","$RefreshReg$"],"sources":["/home/renan/testes/teste-tecnico-accenture/teste-tecnico-front/src/components/LogList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport apiService from \"../services/api\"\n\nconst LogList = () => {\n   const [logs, setLogs] = useState([])\n\n   useEffect(() => {\n      fetchLogs()\n   }, [])\n\n   const fetchLogs = async () => {\n      try{\n         const logsData = await apiService.getLogs()\n         setLogs(logsData)\n      } catch (error) {\n         console.error('Error fetching logs:', error)\n      }\n   }\n\n   return (\n      <div className=\"log-list\">\n         <h1>Log List</h1>\n         <ul>\n            {logs.map((log) => (\n               <>\n               <p key={log._id}>{log._id}</p>\n               <p key={log.ip_address}>{log.ip_address}</p>\n               <p key={log.date}>{log.date}</p>\n               <p key={log.time}>{log.time}</p>\n               <p key={log.username}>{log.username}</p>\n               <p key={log.version}>{log.version}</p>\n               <p key={log.document}>{log.document}</p>\n               <p key={log.description}>{log.description}</p>\n               <br />\n               </>\n            ))}\n         </ul>\n      </div>\n   )\n}\n\nexport default LogList"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}